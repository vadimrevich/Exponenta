[20:35 30.01.2019]

Сегодня начал править и писать основные файлы админ-пака Экспонента для Линукса. Уже написал предварительную версию модуля, устанавливающего админ-пак.

У этого модуля будет одна «документированная особенность». Дело в том, что он будет работать только под учётной записью супепользователя Линукс, но ни как не под учётной записью пользователя sudo. То есть для работы модуля пользователю необходимо будет выполнить команду sudo su - root для входа в учётную запись суперпользователя. Пока не ясно, будет ли эта конструкция работать во всех версиях Linux. 

Второй сложный момент -- это регистрация нового пользователя MyAdminAccount с предопределённым паролем, которого вменяемый администратор Linux захочет заблокировать. Непонятно, как это скажется на всей экосистеме Админ-пака. Пока всё проектируется так, что работа возможна и только под учётной записью root. Но пока не известно, будет ли добавлен скрипт, разрешающий удалённый доступ под этой учётной записью. Это геморройно, и ещё более небезопасно, чем использование «универсального администраторского аккаунта», для которого, на всякий случай, можно просто сменить пароль, если нужно использовать, и ограничить административные права.

На настоящий момент тестовый скрипт админ пака:

1. Подготавливает систему путём установки необходимых для Админ пака зависимостей и пакетов.
2. Создаёт предопределённого пользователя MyAdminAccount и задаёт добавляет его в группу sudo;
3. Копирует файлы из установочного каталога /opt/.tmp в целевой /root/.tmp;
4. Создаёт переменную окружения $Exponenta1, присваивает ей значение, и экспортирует её в переменной /root/.bashrc

Этих действий вполне достаточно, чтобы развернуть тестовую версию пакета. Для развёртывания коммерческой версии в текст макросов необходимо внести некоторые доработки, чтобы минимизировать набор ручных действий. Но для альфа-прототипа таких действий уже достаточно.

Естественно, представленная версия является не стилером, а админ-паком. В отличие от стилера, в админ-паке нет
1. Модуля скрытой установки (пишется элементарно)
2. Модуля установки методом социальной инженерии (пишется несколько сложнее). Этот модуль должен:
* требовать запуска некоторой общесистемной программы от имени администратора;
* передавать ей параметры запуска и возвращать её значение выполнения (код завершения) в полном объёме. На сегодняшний момент это самая сложная для меня часть;
* помимо выполнения этой программы запускать на выполнение другие программы и скрипты (то есть работать как джойнер);
3. В качестве "совсем плохой фичи" она может подменять системный вызов программы, вызывая всякий раз установку админ-пака и стилера. Это вообще "мерзость", которую я не хочу даже реализовывать в автоматическом режиме, поскольку за это можно сесть в тюрьму. :-)

Как видим, написать стилер для операционной системы Linux не представляет ничего сложного. Поэтому, прежде чем потратить большие средства на защиту компьютеров от внешнего проникновения, имеет смысл  вместо программного обеспечения закупить русские щёты. Эти вложения точно окупятся... :-)

Как видно также, нетрудно написать модуль для заражения компьютеров под управлением Mac OS. Но здесь возможны сложности:

1. В Mac OS X отсутствует свободный менеджер пакетов. Вместо него используется магазин приложений AppStore. Необходимо в семом начале написать скрипт, который будет устанавливать из Интернета и магазина приложений какой-либо свободный менеджер пакетов для своей дальнейшей работы. Это сделать неэлементарно, документации реально не хватает.
2. Для установки альтернативных менеджеров пакетов в системе из магазина приложений должен быть установлен пакет Xcode. Помимо того, что он долго устанавливается, при его установке возможны ошибки, полностью приводящие в негодность операционную систему. Это при том, что у него большой объём, короткий цикл обновления, недоступность версий под старые операционные системы. 

Короче, написать стайлер под эту операционную систему возможно, но не выгодно из-за её малой распространённости. Да и нафиг ломать систему, в которой ещё дальше придётся ломать каждую программу, а нормальных финансовых приложений для которой нет... :-) А посмотреть готовые картинки и оригинал-макеты, хранящиеся на MacBook, можно и через уязвимости в сервисах на компьютерах с Windows и Ubuntu.
